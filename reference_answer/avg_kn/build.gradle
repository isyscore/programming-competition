plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.7.10'
}

group = 'com.rarnu'
version = '1.0.0'

repositories {
    mavenCentral()
}

kotlin {
    def hostOs = System.getProperty("os.name")
    def hostArch = System.getProperty("os.arch")
    println(hostArch)
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X") {
        if (hostArch == "aarch64") {
            nativeTarget = macosArm64('native')
        } else {
            nativeTarget = macosX64('native')
        }
    } else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    nativeTarget.with {
        binaries {
            executable {
                entryPoint = 'main'
            }
        }
    }
    sourceSets {
        nativeMain {
            dependencies {
                implementation ("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3-native-mt") {
                    version {
                        strictly("1.6.3-native-mt")
                    }
                }
            }

        }
        nativeTest {

        }
    }
}
